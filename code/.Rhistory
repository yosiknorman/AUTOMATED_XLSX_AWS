# length(which(hujan != 2))
rerata_jam = as.numeric(substr(hasil$jam,12,13))
rerata_bulan = as.numeric(substr(hasil$jam,6,7))
bulan_jam = list()
for(i in 1:12){
bulan_jam[[i]] = hasil$hourly_rainfall[rerata_bulan == i]
}
bulan_jam
bulan_jam
library(lubridate)
minute(1:5)
minutes(1:5)
as.POSIXlt(hasil$jam)
hasil$jam
rerata_jam
start <- as.POSIXct("2017-10-01")
start
start <- as.POSIXct("2017-10-01",tz = "UTC")
start
interval <- 10
interval
end <- start + as.difftime(1, units="days")
end
seq(from=start, by=interval*60, to=end)
as.difftime
interval
end
end <- start + as.difftime(31, units="days")
end
end <- start + as.difftime(30, units="days")
end
seq(from=start, by=interval*60, to=end)
jam_ori = seq(from=start, by=interval*60, to=end)
jam_ori
length(jam_ori)
jo_H=substr(jam_ori,11,12)
jo_H
jo_H=substr(jam_ori,12,13)
jo_H
jam_ori
hasil$jam
jam_ori=substr(jam_ori,12,13)
jam_ori=substr(jam_ori,1,13)
jam_ori
jam_ori=substr(jam_ori,1,13)
jam_ori
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)
jam_ori
hasil$jam
jam_ori
hasil$jam
as.character(hasil$jam)
data_akhir = rep(9999,length(jam_ori))
data_akhir
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(as.character(hasil$jam) ==  jam_ori[i]){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
data_akhir
which(data_akhir !=9999)
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
data_akhir
which(data_akhir == 9999)
which(data_akhir != 9999)
length(which(data_akhir != 9999))
length(which(data_akhir == 9999))
length(hasil$hourly_rainfall)
hasil$hourly_rainfall
24*31
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(30, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)
length(jam_ori)
24*31
24*31
jam_ori
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)
jam_ori
#!/usr/bin/Rscript
rm(list = ls())
# setwd("~/Desktop/BAWIL4/VERIFIKASI BULANAN/automated_verification/code/")
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
dat1 = data.frame(id=id,
time = as.character(dat$Date.Time),
RR = hujan)
# max(hujan)
hujan[is.na(hujan)] = 0
hujan[hujan == 2] =0
# hujan[1:100]
# which(hujan !=0)[1]
hour = substr(dat1$time,1,13)
n_hour <- length(unique(substr(dat1$time,1,13)))-1
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
hujan_jam = c()
for(i in 1:n_hour){
hujan_jam[i] =sum(dat1$RR[hour == i_hour[i]])
}
# max(hujan_jam)
hasil = data.frame(jam=(hour[1:n_hour]),hourly_rainfall=hujan_jam)
library(ggplot2)
# ggplot(hasil, aes(jam, hourly_rainfall)) + geom_line() +
#   # scale_x_date(format = "%b-%Y") +
#   xlab("hourly rainfall") + ylab("Daily Views")
plot(hujan_jam,type = "l")
# length(which(hujan != 2))
rerata_jam = as.numeric(substr(hasil$jam,12,13))
rerata_bulan = as.numeric(substr(hasil$jam,6,7))
bulan_jam = list()
for(i in 1:12){
bulan_jam[[i]] = hasil$hourly_rainfall[rerata_bulan == i]
}
# ================  Decomposition of time =================
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)[1:(length(jam_ori)-1)]
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
24*31
length(which(data_akhir != 9999))
length(which(data_akhir == 9999))
length(hasil$hourly_rainfall)
length(jam_ori)
jam_ori
length(which(data_akhir != 9999))
length(which(data_akhir == 9999))
length(hasil$hourly_rainfall)
hourly_rainfall
hourly_rainfall
hujan_jam
length(dat1$RR)
dat$Date.Time
which(dat$Date.Time == "2017-10-31 23:50")
which(dat$Date.Time == "2017-10-31 23:50:00")
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
#!/usr/bin/Rscript
rm(list = ls())
# setwd("~/Desktop/BAWIL4/VERIFIKASI BULANAN/automated_verification/code/")
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=,
time = as.character(dat$Date.Time)[1:akhir_okt],
RR = hujan[1:akhir_okt])
# max(hujan)
hujan[is.na(hujan)] = 0
hujan[hujan == 2] =0
# hujan[1:100]
# which(hujan !=0)[1]
hour = substr(dat1$time,1,13)
n_hour <- length(unique(substr(dat1$time,1,13)))-1
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
hujan_jam = c()
for(i in 1:n_hour){
hujan_jam[i] =sum(dat1$RR[hour == i_hour[i]])
}
# max(hujan_jam)
length(dat1$RR)
hasil = data.frame(jam=(hour[1:n_hour]),hourly_rainfall=hujan_jam)
library(ggplot2)
# ggplot(hasil, aes(jam, hourly_rainfall)) + geom_line() +
#   # scale_x_date(format = "%b-%Y") +
#   xlab("hourly rainfall") + ylab("Daily Views")
plot(hujan_jam,type = "l")
# length(which(hujan != 2))
rerata_jam = as.numeric(substr(hasil$jam,12,13))
rerata_bulan = as.numeric(substr(hasil$jam,6,7))
bulan_jam = list()
for(i in 1:12){
bulan_jam[[i]] = hasil$hourly_rainfall[rerata_bulan == i]
}
# ================  Decomposition of time =================
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)[1:(length(jam_ori)-1)]
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
24*31
length(which(data_akhir != 9999))
length(which(data_akhir == 9999))
length(hasil$hourly_rainfall)
length(jam_ori)
data_akhir
#!/usr/bin/Rscript
rm(list = ls())
# setwd("~/Desktop/BAWIL4/VERIFIKASI BULANAN/automated_verification/code/")
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=,
time = as.character(dat$Date.Time)[1:akhir_okt],
RR = hujan[1:akhir_okt])
# max(hujan)
hujan[is.na(hujan)] = 0
hujan[hujan == 2] =0
# hujan[1:100]
akhir_okt
as.character(dat$Date.Time)[1:akhir_okt]
hujan[1:akhir_okt]
hujan[is.na(hujan)] = 0
hujan[is.na(hujan)] = 0
hour = substr(dat1$time,1,13)
n_hour <- length(unique(substr(dat1$time,1,13)))-1
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
hour = substr(dat1$time,1,13)
hour
hour = substr(dat1$time,1,13)
hour
dat1 = data.frame(id=,
time = as.character(dat$Date.Time)[1:akhir_okt],
RR = hujan[1:akhir_okt])
hujan[1:akhir_okt]
as.character(dat$Date.Time)[1:akhir_okt]
rm(list = ls())
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=,
time = as.character(dat$Date.Time)[1:akhir_okt],
RR = hujan[1:akhir_okt])
hujan
length(hujan)
length(dat$Date.Time)
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
akhir_okt
dat1 = data.frame(id=,
time = as.character(dat$Date.Time[1:akhir_okt]),
RR = hujan[1:akhir_okt])
dat1 = data.frame(id=,
time = as.character(dat$Date.Time),
RR = hujan)
dat1 = data.frame(id=id,
time = as.character(dat$Date.Time),
RR = hujan)
dat1[1:akhir_okt,]
dat1 = dat1[1:akhir_okt,]
hujan[is.na(hujan)] = 0
max(hujan)
hour = substr(dat1$time,1,13)
n_hour <- length(unique(substr(dat1$time,1,13)))-1
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
hujan_jam = c()
for(i in 1:n_hour){
hujan_jam[i] =sum(dat1$RR[hour == i_hour[i]])
}
hujan_jam
length(dat1$RR)
hasil = data.frame(jam=(hour[1:n_hour]),hourly_rainfall=hujan_jam)
library(ggplot2)
plot(hujan_jam,type = "l")
rerata_jam = as.numeric(substr(hasil$jam,12,13))
rerata_bulan = as.numeric(substr(hasil$jam,6,7))
bulan_jam = list()
for(i in 1:12){
bulan_jam[[i]] = hasil$hourly_rainfall[rerata_bulan == i]
}
bulan_jam
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)[1:(length(jam_ori)-1)]
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
warning()
warnings()
data_akhir
#!/usr/bin/Rscript
rm(list = ls())
# setwd("~/Desktop/BAWIL4/VERIFIKASI BULANAN/automated_verification/code/")
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=id,
time = as.character(dat$Date.Time),
RR = hujan)
dat1 = dat1[1:akhir_okt,]
# max(hujan)
hujan[is.na(hujan)] = 0
# hujan[hujan == 2] =0
# hujan[1:100]
# which(hujan !=0)[1]
hour = substr(dat1$time,1,13)
n_hour <- length(unique(substr(dat1$time,1,13)))-1
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
hujan_jam = c()
for(i in 1:n_hour){
hujan_jam[i] =sum(dat1$RR[hour == i_hour[i]])
}
# max(hujan_jam)
length(dat1$RR)
hasil = data.frame(jam=(hour[1:n_hour]),hourly_rainfall=hujan_jam)
library(ggplot2)
# ggplot(hasil, aes(jam, hourly_rainfall)) + geom_line() +
#   # scale_x_date(format = "%b-%Y") +
#   xlab("hourly rainfall") + ylab("Daily Views")
plot(hujan_jam,type = "l")
# length(which(hujan != 2))
# rerata_jam = as.numeric(substr(hasil$jam,12,13))
# rerata_bulan = as.numeric(substr(hasil$jam,6,7))
#
# bulan_jam = list()
# for(i in 1:12){
#   bulan_jam[[i]] = hasil$hourly_rainfall[rerata_bulan == i]
# }
# ================  Decomposition of time =================
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
length(jam_ori)
jam_ori=substr(jam_ori,1,13)[1:(length(jam_ori)-1)]
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
data_akhir[i] = data_akhir[i]
}
}
warnings()
length(which(data_akhir != 9999))
length(which(data_akhir == 9999))
length(hasil$hourly_rainfall)
length(jam_ori)
length(data_akhir)
length(hasil$jam)
length(data_akhir == 9999)
length(which(data_akhir == 9999))
length(which(data_akhir != 9999))
hasil$hourly_rainfall
data_akhir = rep(9999,length(jam_ori))
data_akhir = rep(9999,length(jam_ori))
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
data_akhir[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}
# else{
#   # data_akhir[i] = data_akhir[i]
# }
}
length(which(data_akhir != 9999))
hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[150]]
jam_ori
length(jam_ori)
length(hasil$jam)
1:length(jam_ori)
joz = c()
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
joz[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
joz[i] = 9999
}
# else{
#   # data_akhir[i] = data_akhir[i]
# }
}
joz
joz = c()
for(i in 1:length(jam_ori)){
if(any(as.character(hasil$jam) ==  jam_ori[i])){
joz[i] = hasil$hourly_rainfall[as.character(hasil$jam) ==  jam_ori[i]]
}else{
joz[i] = 0
}
# else{
#   # data_akhir[i] = data_akhir[i]
# }
}
which(as.character(hasil$jam) %in%  jam_ori )
which(as.character(hasil$jam) %in%  jam_ori )
i_ori = which(as.character(hasil$jam) %in%  jam_ori )
as.character(hasil$jam)
jam_ori
as.character(hasil$jam)
akhir_okt
akhir_okt
dat1
hour
warnings()
i_ori
jam_ori
i_ori
i_ori = which(as.character(hasil$jam) %in%  jam_ori )
rm(list = ls())
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=id,
time = as.character(dat$Date.Time),
RR = hujan)
dat1 = dat1[1:akhir_okt,]
dat1
dat1
rm(list = ls())
# setwd("~/Desktop/BAWIL4/VERIFIKASI BULANAN/automated_verification/code/")
f = list.files("../data/")
f = f[length(f)]
f = f[1]
dat = read.delim2( sprintf("../data/%s",f),header = T)
id = as.character(unique(dat$ID.Station))[1]
hujan = (as.vector(as.numeric(as.character(dat$RR))))
akhir_okt = which(dat$Date.Time == "2017-10-31 23:50:00")
dat1 = data.frame(id=id,
time = as.character(dat$Date.Time),
RR = hujan)
dat1
dat1 = dat1[1:akhir_okt,]
dat1
hujan[is.na(hujan)] = 0
hujan
hour = substr(dat1$time,1,13)
hour
n_hour <- length(unique(substr(dat1$time,1,13)))-1
n_hour
i_hour <- unique(substr(dat1$time,1,13))[1:n_hour]
i_hour
n_hour
i_hour
hujan_jam = c()
for(i in 1:n_hour){
hujan_jam[i] =sum(dat1$RR[hour == i_hour[i]])
}
hujan_jam
hour
length(dat1$RR)
hasil = data.frame(jam=(hour[1:n_hour]),hourly_rainfall=hujan_jam)
hasil
library(ggplot2)
plot(hujan_jam,type = "l")
start <- as.POSIXct("2017-10-01",tz = "UTC")
interval <- 60
end <- start + as.difftime(31, units="days")
jam_ori = seq(from=start, by=interval*60, to=end)
jam_ori
jam_ori=substr(jam_ori,1,13)[1:(length(jam_ori)-1)]
jam_ori
hasil$jam
